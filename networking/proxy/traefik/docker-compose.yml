# yaml-language-server: $schema=https://raw.githubusercontent.com/compose-spec/compose-spec/master/schema/compose-spec.json
version: "3.9"


x-variables:
  PROXY_NAME: &proxy_name ${PROXY_NAME:-proxy}
  PROXY_SUBNET: &proxy_subnet ${PROXY_SUBNET:-172.240.1.0/24}
  PROXY_DOMAIN: &proxy_domain ${PROXY_DOMAIN:?err}

  AUTH_USERS: &auth_users ${AUTH_USERS:?err}
  CF_API: &cf_api [ "CF_API_EMAIL=${CF_API_EMAIL:?err}", "CF_API_KEY=${CF_API_KEY:?err}" ]

networks:
  default:
    name: *proxy_name
    ipam:
      config:
        - subnet: *proxy_subnet


services:
  # TODO :: Auto allow containers via "{{ .Name }}.docker" from inside the LAN network only
  traefik:
    extends:
      file: ../../../common.yml
      service: low-resources

    image: traefik:latest
    environment: *cf_api

    security_opt: [ no-new-privileges=true ]
    ports: [ 80:80, 443:443 ]
    volumes: [ "/var/run/docker.sock:/var/run/docker.sock:ro" ]
    command: [
      "--api.dashboard=true",
      "--providers.docker=true",
      "--providers.docker.exposedbydefault=false",
      "--providers.docker.defaultRule: 'Host(`{{ trimPrefix `/` .Name }}.${PROXY_DOMAIN:?err}`)'",
      "--entrypoints.web.address=:80",
      "--entrypoints.websecure.address=:443",
      "--certificatesresolvers.cloudflare.acme.email=${CF_API_EMAIL:?err}",
      "--certificatesresolvers.cloudflare.acme.storage=/letsencrypt/acme.json",
      "--certificatesresolvers.cloudflare.acme.dnschallenge.provider=cloudflare",
      "--certificatesresolvers.cloudflare.acme.dnschallenge.resolvers[0]=1.1.1.1:53",
      "--certificatesresolvers.cloudflare.acme.dnschallenge.resolvers[0]=1.0.0.0:53"
    ]
    labels:
      traefik.enable: true
      traefik.docker.network: *network_name
      traefik.http.routers.traefik.entrypoints: "websecure"
      traefik.http.routers.traefik.rule: "Host(`admin.${PROXY_DOMAIN:?err}`) && PathPrefix(`/api`, `/dashboard`)"
      traefik.http.routers.traefik.tls: true
      traefik.http.routers.traefik.tls.certresolver: "cloudflare"
      traefik.http.routers.traefik.service: "api@internal"
      # traefik.http.services.traefik.loadbalancer.server.port: "8080"

      traefik.http.routers.traefik.middlewares: "auth"
      traefik.http.middlewares.auth.basicauth.users: *auth_users

